# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-07-22 15:40
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import taggit_autosuggest.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=200, verbose_name=b'First Name')),
                ('last_name', models.CharField(max_length=200, verbose_name=b'Last Name')),
                ('initials', models.CharField(max_length=20, verbose_name=b'Initials')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='AuthorAffiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affiliation', models.TextField(blank=True, null=True, verbose_name=b'Affiliation')),
                ('identifier', models.CharField(help_text=b'see https://www.nlm.nih.gov/bsd/mms/medlineelements.html#auid', max_length=200, verbose_name=b'Identifier')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lum.Author')),
            ],
        ),
        migrations.CreateModel(
            name='CISTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'CIS Keyword Tag',
                'verbose_name_plural': 'CIS Keyword Tags',
            },
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Name')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Address')),
                ('organization', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Organization')),
                ('department', models.CharField(blank=True, max_length=200, null=True, verbose_name=b'Department')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name=b'City')),
                ('province', models.CharField(blank=True, max_length=100, verbose_name=b'Province')),
                ('postal_code', models.CharField(blank=True, max_length=11, null=True, verbose_name=b'Postal Code')),
                ('country', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'Country')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name=b'Phone')),
            ],
            options={
                'verbose_name': 'Lab',
                'verbose_name_plural': 'Labs',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime(2016, 7, 22, 15, 40, 25, 667972, tzinfo=utc), editable=False)),
                ('modified', models.DateTimeField(default=datetime.datetime(2016, 7, 22, 15, 40, 25, 668038, tzinfo=utc))),
                ('pmid', models.CharField(max_length=255, verbose_name=b'PMID')),
                ('title', models.CharField(blank=True, max_length=500, null=True, verbose_name=b'Title')),
                ('abstract', models.TextField(blank=True, null=True, verbose_name=b'Abstract')),
                ('doi', models.CharField(blank=True, help_text=b'Digital object identifier', max_length=255, null=True, verbose_name=b'DOI')),
                ('authors', models.ManyToManyField(related_name='author_set', to='lum.Author', verbose_name=b'authors')),
                ('cis_keywords', taggit_autosuggest.managers.TaggableManager(help_text=b'Search terms used to find this publication on PubMed', through='lum.CISTags', to='taggit.Tag', verbose_name=b'Queries used')),
                ('labs', models.ManyToManyField(blank=True, related_name='pub_set', to='lum.Lab', verbose_name=b'labs')),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
            },
        ),
        migrations.CreateModel(
            name='SearchStash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime(2016, 7, 22, 15, 40, 25, 670545, tzinfo=utc), editable=False)),
                ('modified', models.DateTimeField(default=datetime.datetime(2016, 7, 22, 15, 40, 25, 670586, tzinfo=utc))),
                ('search_used', models.CharField(max_length=255, verbose_name=b'Search Used')),
                ('pmids', models.ManyToManyField(to='lum.Publication')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cistags',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lum.Publication'),
        ),
        migrations.AddField(
            model_name='cistags',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lum_cistags_items', to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='author',
            name='labs',
            field=models.ManyToManyField(blank=True, null=True, related_name='author_set', to='lum.Lab', verbose_name=b'labs'),
        ),
    ]
